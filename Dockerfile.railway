# Railway deployment Dockerfile
FROM node:20-alpine AS base

# Install dependencies
RUN apk add --no-cache libc6-compat curl

# Set working directory
WORKDIR /app

# Copy package files
COPY Netra-Backend/package*.json ./Netra-Backend/
COPY Netra-Frontend/package*.json ./Netra-Frontend/
COPY Netra-sfu/package*.json ./Netra-sfu/

# Install dependencies
RUN cd Netra-Backend && npm ci --only=production --ignore-scripts
RUN cd Netra-Frontend && npm ci --ignore-scripts
RUN cd Netra-sfu && npm ci --only=production --ignore-scripts

# Copy source code
COPY . .

# Build frontend
RUN cd Netra-Frontend && npm run build

# Create production image
FROM node:20-alpine AS runner

# Install dependencies
RUN apk add --no-cache libc6-compat curl

WORKDIR /app

ENV NODE_ENV=production
ENV PORT=3000

# Copy built application
COPY --from=base /app/Netra-Frontend/dist ./Netra-Frontend/dist
COPY --from=base /app/Netra-Backend ./Netra-Backend
COPY --from=base /app/Netra-sfu ./Netra-sfu

# Copy node_modules
COPY --from=base /app/Netra-Backend/node_modules ./Netra-Backend/node_modules
COPY --from=base /app/Netra-sfu/node_modules ./Netra-sfu/node_modules

# Create startup script
RUN echo '#!/bin/sh' > /app/start.sh && \
    echo 'echo "Starting Netra services..."' >> /app/start.sh && \
    echo '' >> /app/start.sh && \
    echo '# Start SFU server in background' >> /app/start.sh && \
    echo 'cd /app/Netra-sfu && node server.js &' >> /app/start.sh && \
    echo 'SFU_PID=$!' >> /app/start.sh && \
    echo 'echo "SFU server started with PID: $SFU_PID"' >> /app/start.sh && \
    echo '' >> /app/start.sh && \
    echo '# Wait a moment for SFU to start' >> /app/start.sh && \
    echo 'sleep 2' >> /app/start.sh && \
    echo '' >> /app/start.sh && \
    echo '# Start backend server' >> /app/start.sh && \
    echo 'cd /app/Netra-Backend && node src/index.js &' >> /app/start.sh && \
    echo 'BACKEND_PID=$!' >> /app/start.sh && \
    echo 'echo "Backend server started with PID: $BACKEND_PID"' >> /app/start.sh && \
    echo '' >> /app/start.sh && \
    echo '# Wait for backend to be ready' >> /app/start.sh && \
    echo 'echo "Waiting for backend to be ready..."' >> /app/start.sh && \
    echo 'for i in $(seq 1 30); do' >> /app/start.sh && \
    echo '  if curl -f http://localhost:3001/healthz > /dev/null 2>&1; then' >> /app/start.sh && \
    echo '    echo "Backend is ready!"' >> /app/start.sh && \
    echo '    break' >> /app/start.sh && \
    echo '  fi' >> /app/start.sh && \
    echo '  echo "Waiting for backend... ($i/30)"' >> /app/start.sh && \
    echo '  sleep 2' >> /app/start.sh && \
    echo 'done' >> /app/start.sh && \
    echo '' >> /app/start.sh && \
    echo '# Start nginx for frontend' >> /app/start.sh && \
    echo 'echo "Starting nginx for frontend..."' >> /app/start.sh && \
    echo 'nginx -g "daemon off;" &' >> /app/start.sh && \
    echo 'NGINX_PID=$!' >> /app/start.sh && \
    echo 'echo "Nginx started with PID: $NGINX_PID"' >> /app/start.sh && \
    echo '' >> /app/start.sh && \
    echo '# Wait for all processes' >> /app/start.sh && \
    echo 'wait $SFU_PID $BACKEND_PID $NGINX_PID' >> /app/start.sh && \
    chmod +x /app/start.sh

# Install nginx
RUN apk add --no-cache nginx

# Copy nginx configuration
COPY Netra-Frontend/nginx.conf /etc/nginx/nginx.conf

# Create non-root user
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs
RUN chown -R nextjs:nodejs /app

# Expose ports
EXPOSE 3000 3001 5001 80

# Start the application
CMD ["/app/start.sh"] 