# Railway deployment Dockerfile
FROM node:20-alpine AS base

# Install dependencies
RUN apk add --no-cache libc6-compat curl

# Set working directory
WORKDIR /app

# Copy package files
COPY Netra-Backend/package*.json ./Netra-Backend/
COPY Netra-Frontend/package*.json ./Netra-Frontend/
COPY Netra-sfu/package*.json ./Netra-sfu/

# Install dependencies
RUN cd Netra-Backend && npm ci --only=production --ignore-scripts
RUN cd Netra-Frontend && npm ci --ignore-scripts
RUN cd Netra-sfu && npm ci --only=production --ignore-scripts

# Copy source code
COPY . .

# Build frontend
RUN cd Netra-Frontend && npm run build

# Create production image
FROM node:20-alpine AS runner

# Install dependencies
RUN apk add --no-cache libc6-compat curl

WORKDIR /app

ENV NODE_ENV=production
ENV PORT=3000

# Copy built application
COPY --from=base /app/Netra-Frontend/dist ./Netra-Frontend/dist
COPY --from=base /app/Netra-Backend ./Netra-Backend
COPY --from=base /app/Netra-sfu ./Netra-sfu

# Copy node_modules
COPY --from=base /app/Netra-Backend/node_modules ./Netra-Backend/node_modules
COPY --from=base /app/Netra-sfu/node_modules ./Netra-sfu/node_modules

# Copy startup script
COPY start.sh /app/start.sh
RUN chmod +x /app/start.sh

# Install nginx
RUN apk add --no-cache nginx

# Copy nginx configuration
COPY Netra-Frontend/nginx.conf /etc/nginx/nginx.conf

# Create non-root user
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs
RUN chown -R nextjs:nodejs /app

# Expose ports
EXPOSE 3000 3001 5001 80

# Start the application
CMD ["/app/start.sh"] 